$progress-height: 1rem !default;
$progress-margin-bottom: 0.4rem !default;
$progress-bar-color: var(--color-light-grey) !default;
$progress-bar-value-color: var(--color-dark) !default;

$pseudo-fill-classes: -moz-progress-bar, -webkit-progress-value, -ms-fill;

.progress {
  --bar-height: #{$progress-height};
  --margin-bottom: #{$progress-margin-bottom};
  --bar-color: #{$progress-bar-color};
  --value-color: #{$progress-bar-value-color};

  border: none;
  display: flex;
  height: var(--bar-height);
  margin-bottom: var(--margin-bottom);
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  width: 100%;

  &.is-round {
    border-radius: 50px;

    &::-webkit-progress-bar {
      border-radius: 50px;
    }

    &::#{nth($pseudo-fill-classes, 2)} {
      border-radius: 50px;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &::#{nth($pseudo-fill-classes, 1)} {
      border-radius: 50px;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }

  &::-webkit-progress-bar {
    background-color: var(--bar-color);
  }

  @each $class in $pseudo-fill-classes {
    &::#{$class} {
      background-color: var(--value-color);
      border: none;
    }
  }

  @each $color in $color-palette {
    &.is-#{nth($color, 1)}::#{nth($pseudo-fill-classes, 3)} {
      --value-color: var(--color-#{nth($color, 1)});
    }

    &.is-#{nth($color, 1)}::#{nth($pseudo-fill-classes, 1)} {
      --value-color: var(--color-#{nth($color, 1)});
    }

    &.is-#{nth($color, 1)}::#{nth($pseudo-fill-classes, 2)} {
      --value-color: var(--color-#{nth($color, 1)});
    }
  }
}

// Loader Styles !Required!
$spinner_speed: 0.675s;
$spinner_radius: 80%;
$spinner_fill_radius: 90px;

$spinner_size: 50px;
$spinner_thickness: 10px;
$spinner_inner_circle: $spinner_size - $spinner_thickness;

$spinner_color: $dark;
$spinner_bg: $light;
$spinner_inner_bg: transparent;

.spinner {
  border-radius: 80%;
  display: block;
  height: $spinner_size;
  width: $spinner_size;
  position: relative;
  animation: spin $spinner_speed linear 0s infinite normal;
  background: $spinner_bg;

  &:before,
  &:after {
    content: "";
    display: block;
    position: absolute;
  }

  &:before {
    border-radius: 0 $spinner_fill_radius $spinner_fill_radius 0;
    height: $spinner_size;
    width: 50%;
    top: 0;
    right: 0;
    z-index: 1;
    background: $spinner_color;
    background-image: linear-gradient($spinner_bg, $spinner_color);
  }

  &:after {
    border-radius: $spinner_radius;
    height: $spinner_inner_circle;
    width: $spinner_inner_circle;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    background: $spinner_inner_bg;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
